

# Clear the workspace
rm(list=ls())

# Set the working directory
setwd("C:/Users/Julian/Desktop/Statistik/R/Data")

# Install packages
#Install packages
#install.packages("foreign", dep=TRUE)
#install.packages("lubridate", dep=TRUE)
#install.packages("forecast", dep=TRUE)
#install.packages("moments", dep=TRUE)
#install.packages("quantmod")
#install.packages("timeSeries")
#install.packages("fPortfolio")
#install.packages("PerformanceAnalytics")
#install.packages("ggplot2")


# Load packages
require(foreign)
require(lubridate)
require(forecast)
require(moments)
require(quantmod)
library(timeSeries)
library(fPortfolio)
library(PerformanceAnalytics)
library(ggplot2)


# Import and view the data set 

# Load csv file on pc
data_3M <- read.csv("MMM.csv", header=TRUE, sep = ",")
# View csv file on pc
Viewdata_3M
# Summarize the data
summary(data_3M)


# Constructing returns

# Prepare the Log-Return
y <- diff(log(data_3M$Close))

# show logreturns in %
logret_3M <- y*100
logret_3M

# plot original closing prices 

# Linear graph of return and close price of 3M
plot(logret_3M, type="l", col="blue",ylab="Log Return and Close Price of 3M", xlab="Days Count from 2004 to 2009", ylim=c(-10,100))
par(new=T)
plot(data_3M$Close[-1], type="l", col="Red",xlab="", ylab="", ylim=c(-10,100))
par(adj = 1)
title(sub="Blue Line is the Log Return in % and Red Line is the Close Price in $", cex.sub=1)

# Histrogram of return and close price of 3M
hist(logret_3M, col=rgb(1,0,0,0.5), freq=T, main="Log Return and Close Price Frequency of 3M",breaks=seq(min(-15), max(110)),xlab="Log Return and Close Price of 3M", length.out=181)
hist(data_3M$Close, col=rgb(0,0,1,0.5), freq=T, main="Log Return and Close Price Frequency of 3M",breaks=seq(min(-15), max(110)),xlab="Log Return and Close Price of 3M", length.out=181, add=T)
title(main="Log Return and Close Price Frequency of 3M", sub="Blue Bins are the Close Price of 3M in $ and Red Bins are the Log Return of 3M in %", cex.sub=0.5)


# Testing of the 3M Price and Return

# testing for autocorrelation
Acf(logret_3M, na.action = na.omit, main= "Autocorrelation of Log Return of 3M")
Acf(data_3M$Close, na.action = na.omit, main= "Autocorrelation of Price of 3M")

## Portmanteau-white-noise-test (Box-Ljung)
Box.test(diff(logret_3M), lag = 100, type = "Box-Pierce")
Box.test(logret_3M, lag = 100, type = "Ljung-Box")


# Normality test for both Price and log - return of 3M

# Jarque-Bera Test
# test for price
jarque.bera.test(data_3M$Close)
# tet for log - return
jarque.bera.test(logret_3M)


# Summary statistics and test only for 3M log - return

logret_3MM <- logret_3M/100

# Basic summary statistics (mean, min, max)
summary(logret_3M)

# Variance
var(logret_3M)
stdev(logret_3M)

#Quantiles
quantile(logret_3M, probs = c(.01,.05, .10, .25, .50, .75,.90,.95,.99))

# Skewness
skewness(logret_3M)

# Kurtosis
kurtosis(logret_3M)

# Histograms for 3M log-return

max(logret_3M)

# Creates a histogram with 80 bins
hist(logret_3M, freq=FALSE, main = "Comparison of Log Retrun of 3M to Standard Normal Distribution",
      xlab="Log Return of 3M", breaks=seq(min(logret_3M), max(logret_3M), length.out=181))
# Comparison with normal distribution (0,1)
curve(dnorm(x), add=TRUE, col="darkblue", lwd=2)

#comparison with normal distr. (mean logret, sd logret)
(hist(logret, freq=FALSE, ylim = c(0,.4),
      breaks=seq(min(logret), max(logret), length.out=181))) 
# Comparison with normal distribution
curve(dnorm(x, mean=mean(logret), sd=sd(logret)), add=TRUE, col="darkblue", lwd=2)


# Kernel density plots for 3M log-return

# Choice of Kernel
# Gaussian
plot(density(logret_3M, kernel = "gaussian"), 
     col = "black", lwd = 2,
     ylim = c(0,0.5),
     main = "Density of Log Return of 3M")
# Triangular    
plot(density(logret, kernel = "triangular"), 
     col = "black", lwd = 2,
     ylim = c(0,1),
      main = "Density of Log Return of 3M")
# Epanechnikov      
plot(density(logret, kernel = "epanechnikov"), 
     col = "black", lwd = 2,
     ylim = c(0,1),
      main = "Density of Log Return of 3M")


# Compare Kernel with different normal distribution

# kernel density with normal density superimposed
plot(density(logret_3M, kernel = "gaussian"),
     col = "black", lwd = 2,
     ylim = c(0,.5),
     main = "Density of Log Return of 3M")
curve(dnorm(x, mean=mean(logret_3M), sd=sd(logret_3M)), add=TRUE, col="red", lwd=2)

# kernel density with normal density (0,1)
plot(density(logret_3M, kernel = "gaussian"),
     col = "black", lwd = 2,
     ylim = c(0,.4),
     main = "Density of Log Return of 3M")
curve(dnorm(x), add=TRUE, col="red", lwd=2)


# QQ-Plots for 3M log return

qqnorm(logret_3M, main = "QQ-Plot Log Return of 3M")
qqline(logret_3M,col="red", lwd=2)

